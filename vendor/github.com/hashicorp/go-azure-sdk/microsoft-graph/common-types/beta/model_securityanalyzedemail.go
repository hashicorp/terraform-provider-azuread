package beta

import (
	"encoding/json"
	"fmt"

	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
)

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

var _ Entity = SecurityAnalyzedEmail{}

type SecurityAnalyzedEmail struct {
	// A collection of values that contain the IDs of any alerts associated with the email.
	AlertIds *[]string `json:"alertIds,omitempty"`

	// A collection of the attachments in the email.
	Attachments *[]SecurityAnalyzedEmailAttachment `json:"attachments,omitempty"`

	// The authentication details associated with the email.
	AuthenticationDetails *SecurityAnalyzedEmailAuthenticationDetail `json:"authenticationDetails,omitempty"`

	// The bulk complaint level of the email. A higher level is more likely to be spam.
	BulkComplaintLevel nullable.Type[string] `json:"bulkComplaintLevel,omitempty"`

	// Shows the type of client that sent the message (for example, REST).
	ClientType nullable.Type[string] `json:"clientType,omitempty"`

	// Provides context of the email.
	Contexts *[]string `json:"contexts,omitempty"`

	// The methods of detection used.
	DetectionMethods *[]string `json:"detectionMethods,omitempty"`

	// The direction of the emails. The possible values are: unknown, inbound, outbound, intraOrg, unknownFutureValue.
	Directionality *SecurityAntispamDirectionality `json:"directionality,omitempty"`

	// The distribution list details to which the email was sent.
	DistributionList nullable.Type[string] `json:"distributionList,omitempty"`

	// Data loss prevention rules configured in purview.
	DlpRules *[]SecurityAnalyzedEmailDlpRuleInfo `json:"dlpRules,omitempty"`

	// The identifier for the group of similar emails clustered based on heuristic analysis of their content.
	EmailClusterId nullable.Type[string] `json:"emailClusterId,omitempty"`

	// The name of the Exchange transport rules (ETRs) associated with the email.
	ExchangeTransportRules *[]SecurityAnalyzedEmailExchangeTransportRuleInfo `json:"exchangeTransportRules,omitempty"`

	// Email smtp forwarding details.
	ForwardingDetail nullable.Type[string] `json:"forwardingDetail,omitempty"`

	// Custom instructions name that defines organizational mail flow and how the email was routed.
	InboundConnectorFormattedName nullable.Type[string] `json:"inboundConnectorFormattedName,omitempty"`

	// A public-facing identifier for the email that is sent. The message ID is in the format specified by RFC2822.
	InternetMessageId nullable.Type[string] `json:"internetMessageId,omitempty"`

	// The detected language of the email content.
	Language nullable.Type[string] `json:"language,omitempty"`

	// The latest delivery details of the email.
	LatestDelivery *SecurityAnalyzedEmailDeliveryDetail `json:"latestDelivery,omitempty"`

	// Date-time when the email record was logged.
	LoggedDateTime nullable.Type[string] `json:"loggedDateTime,omitempty"`

	// An internal identifier for the email generated by Microsoft 365.
	NetworkMessageId nullable.Type[string] `json:"networkMessageId,omitempty"`

	// The original delivery details of the email.
	OriginalDelivery *SecurityAnalyzedEmailDeliveryDetail `json:"originalDelivery,omitempty"`

	// An aggregated list of all overrides with source on email.
	OverrideSources *[]string `json:"overrideSources,omitempty"`

	// The phish confidence level associated with the email
	PhishConfidenceLevel nullable.Type[string] `json:"phishConfidenceLevel,omitempty"`

	// The action policy that took effect.
	Policy nullable.Type[string] `json:"policy,omitempty"`

	// The action taken on the email based on the configured policy.
	PolicyAction nullable.Type[string] `json:"policyAction,omitempty"`

	// Type of policy configured that defines the delivery action on email.
	PolicyType nullable.Type[string] `json:"policyType,omitempty"`

	// Shows the organization or user setting that altered the intended delivery location of the message (allowed instead of
	// blocked, or blocked instead of allowed).
	PrimaryOverrideSource nullable.Type[string] `json:"primaryOverrideSource,omitempty"`

	// Details of the recipients.
	RecipientDetail *SecurityAnalyzedEmailRecipientDetail `json:"recipientDetail,omitempty"`

	// Contains the email address of the recipient.
	RecipientEmailAddress nullable.Type[string] `json:"recipientEmailAddress,omitempty"`

	// A field that indicates where and how bounced emails are processed.
	ReturnPath nullable.Type[string] `json:"returnPath,omitempty"`

	// Sender details of the email.
	SenderDetail *SecurityAnalyzedEmailSenderDetail `json:"senderDetail,omitempty"`

	// Size of the email in bytes.
	SizeInBytes nullable.Type[int64] `json:"sizeInBytes,omitempty"`

	// Spam confidence of the email.
	SpamConfidenceLevel nullable.Type[string] `json:"spamConfidenceLevel,omitempty"`

	// Subject of the email.
	Subject nullable.Type[string] `json:"subject,omitempty"`

	// Information about threats detected in the email.
	ThreatDetectionDetails *[]SecurityThreatDetectionDetail `json:"threatDetectionDetails,omitempty"`

	// Indicates the threat types. The possible values are: unknown, spam, malware, phish, none, unknownFutureValue.
	ThreatTypes *[]SecurityThreatType `json:"threatTypes,omitempty"`

	// Delivery and post-delivery events that happened to the email.
	TimelineEvents *[]SecurityTimelineEvent `json:"timelineEvents,omitempty"`

	// A collection of the URLs in the email.
	Urls *[]SecurityAnalyzedEmailUrl `json:"urls,omitempty"`

	// Fields inherited from Entity

	// The unique identifier for an entity. Read-only.
	Id *string `json:"id,omitempty"`

	// The OData ID of this entity
	ODataId *string `json:"@odata.id,omitempty"`

	// The OData Type of this entity
	ODataType *string `json:"@odata.type,omitempty"`

	// Model Behaviors
	OmitDiscriminatedValue bool `json:"-"`
}

func (s SecurityAnalyzedEmail) Entity() BaseEntityImpl {
	return BaseEntityImpl{
		Id:        s.Id,
		ODataId:   s.ODataId,
		ODataType: s.ODataType,
	}
}

var _ json.Marshaler = SecurityAnalyzedEmail{}

func (s SecurityAnalyzedEmail) MarshalJSON() ([]byte, error) {
	type wrapper SecurityAnalyzedEmail
	wrapped := wrapper(s)
	encoded, err := json.Marshal(wrapped)
	if err != nil {
		return nil, fmt.Errorf("marshaling SecurityAnalyzedEmail: %+v", err)
	}

	var decoded map[string]interface{}
	if err = json.Unmarshal(encoded, &decoded); err != nil {
		return nil, fmt.Errorf("unmarshaling SecurityAnalyzedEmail: %+v", err)
	}

	if !s.OmitDiscriminatedValue {
		decoded["@odata.type"] = "#microsoft.graph.security.analyzedEmail"
	}

	encoded, err = json.Marshal(decoded)
	if err != nil {
		return nil, fmt.Errorf("re-marshaling SecurityAnalyzedEmail: %+v", err)
	}

	return encoded, nil
}
